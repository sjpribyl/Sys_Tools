#!/usr/bin/perl 
use strict;
use warnings;
### JOBNAME: dsgetgid
###
### DESCRIPTION: Finds gids for new groups. Script is run online and
###                is interactive.
### APPLICATION NAME: 
###
### ERROR HANDLING INSTRUCTIONS: none
### DATE IN
###
### JOB FREQUENCY: n/a This runs interactive
###
### EARLY START TIME: n/a
###
### ESTIMATED RUN TIME: seconds
###
### JOB DEPENDENCIES: n/a
###
### JOB USERID:  runs under user's userid
###
###################################################################
#                   Script maintenance history #
###################################################################
#
#   02/28/01   Guy Robbins (AIS department) AUTHOR OF SCRIPT
#   04/15/09   SJP rewrite in perl
############################################################################## 
#  required files /allstate/log/dsgid.log  ftp from AIS
#                /allstate/log/dsgid2.log  next gid to assign
#                /allstate/log/dsnewgid.log gids added by this code
$|=1;

use Fcntl ':flock'; # import LOCK_* constants
use File::Copy;
use FileHandle;

#my $prefix="/export/home/spr4h/tmp";            ### test
my $prefix="/allstate/log";                            ### prod
my $groupid=$ARGV[0];


###################################################
##  check for errors
if (!defined $groupid)  {                              ### groupid entered
   print "ERROR you must enter a groupid\n";
   exit 1;
}
if ( ! -f "$prefix/dsgid.log" ) {             ### check for gid file
   print "ERROR**** $prefix/dsgid.log not found.  Contact AIS :$! \n";
   exit 1;
}
if ( ! -f "$prefix/dsgid2.log" ) {             ### check for nextgid file
   print "ERROR**** $prefix/dsgid2.log not found.  Contact AIS :$! \n";
   exit 1;
}

###################################################
##   process
#
#Lock the lock file to prevent collisions
#
my $LOCK_FILE="$prefix/.dsgid.lock";
open LOCK,">",$LOCK_FILE or die "ERROR: Could open lock $LOCK_FILE: $!\n";
LOCK->autoflush(1);			#turn off buffering on the lock file handle
flock(LOCK,LOCK_EX);		#Lock the file
print LOCK "$0 $$\n";  		#Put the PID in the LOCK file 


#
# Search for the user in the existing files
#
my $found=0;
open INPUT,"$prefix/dsgid.log" or die "ERROR***** Can't open $prefix/dsgid.log. Contact AIS:$!\n";
while(<INPUT>) {
	my $line=$_;
	if($line =~/^$groupid /) {
		$found=1;
		print "$line";
	}
}
close INPUT;

#
# If not found look in the newgid file
#
if ( !$found && -f "$prefix/dsnewgid.log" ) {       ### check for newgid file
	open INPUT,"$prefix/dsnewgid.log" or die "ERROR***** Can't open $prefix/dsnewgid.log. Contact AIS:$!\n";
	while(my $line=<INPUT>) {
		my @groups = split(/ /,$line);
		if($line=~/^$groupid /) {
			$found=1;
			print "$line";
		}
	}
	close INPUT;
}
#
# if still not found then generate the new gid
#
if(!$found) {
	print "$groupid NOT found on current hosts\n";
	open INPUT,"<$prefix/dsgid2.log" or die "ERROR***** Can't open $prefix/dsgid2.log. Contact AIS:$!\n";   # Open dsgid2
	my $line=<INPUT>;
	chomp($line);
	close INPUT;
	my ($text,$nextgid)=split(":",$line);
	open OUTPUT,">>$prefix/dsnewgid.log" or die "ERROR***** Can't open $prefix/dsnewgid.log. Contact AIS:$!\n";   # Add to new allocated
	print OUTPUT "$groupid $nextgid <HOST>\n";   # Add to new allocated file
	close OUTPUT;
	print "Sugguested UID is $nextgid\n";
	$nextgid++;
	open OUTPUT,">$prefix/dsgid3.log" or die "ERROR***** Can't open $prefix/dsgid3.log. Contact AIS:$!\n";   # Add to new allocated
	print OUTPUT "nextgid:$nextgid\n";   
	close OUTPUT;
	copy("$prefix/dsgid3.log","$prefix/dsgid2.log");
	unlink("$prefix/dsgid3.log");
}

